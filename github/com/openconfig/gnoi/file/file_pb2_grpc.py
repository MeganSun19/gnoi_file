# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from github.com.openconfig.gnoi.file import file_pb2 as github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in github.com/openconfig/gnoi/file/file_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class FileStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_stream(
                '/gnoi.file.File/Get',
                request_serializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.GetRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.GetResponse.FromString,
                _registered_method=True)
        self.TransferToRemote = channel.unary_unary(
                '/gnoi.file.File/TransferToRemote',
                request_serializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.TransferToRemoteRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.TransferToRemoteResponse.FromString,
                _registered_method=True)
        self.Put = channel.stream_unary(
                '/gnoi.file.File/Put',
                request_serializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.PutRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.PutResponse.FromString,
                _registered_method=True)
        self.Stat = channel.unary_unary(
                '/gnoi.file.File/Stat',
                request_serializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.StatRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.StatResponse.FromString,
                _registered_method=True)
        self.Remove = channel.unary_unary(
                '/gnoi.file.File/Remove',
                request_serializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.RemoveRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.RemoveResponse.FromString,
                _registered_method=True)


class FileServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Get reads and streams the contents of a file from the target.
        The file is streamed by sequential messages, each containing up to
        64KB of data. A final message is sent prior to closing the stream
        that contains the hash of the data sent. An error is returned
        if the file does not exist or there was an error reading the file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferToRemote(self, request, context):
        """TransferToRemote transfers the contents of a file from the target to a
        specified remote location. The response contains the hash of the data
        transferred. An error is returned if the file does not exist, the file
        transfer fails, or if there was an error reading the file. This is a
        blocking call until the file transfer is complete.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Put(self, request_iterator, context):
        """Put streams data into a file on the target. The file is sent in
        sequential messages, each message containing up to 64KB of data. A final
        message must be sent that includes the hash of the data sent. An
        error is returned if the location does not exist or there is an error
        writing the data. If no checksum is received, the target must assume the
        operation is incomplete and remove the partially transmitted file. The
        target should initially write the file to a temporary location so a failure
        does not destroy the original file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stat(self, request, context):
        """Stat returns metadata about a file on the target. An error is returned
        if the file does not exist of there is an error in accessing the metadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
        """Remove removes the specified file from the target. An error is
        returned if the file does not exist, is a directory, or the remove
        operation encounters an error (e.g., permission denied).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FileServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_stream_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.GetRequest.FromString,
                    response_serializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.GetResponse.SerializeToString,
            ),
            'TransferToRemote': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferToRemote,
                    request_deserializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.TransferToRemoteRequest.FromString,
                    response_serializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.TransferToRemoteResponse.SerializeToString,
            ),
            'Put': grpc.stream_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.PutRequest.FromString,
                    response_serializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.PutResponse.SerializeToString,
            ),
            'Stat': grpc.unary_unary_rpc_method_handler(
                    servicer.Stat,
                    request_deserializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.StatRequest.FromString,
                    response_serializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.StatResponse.SerializeToString,
            ),
            'Remove': grpc.unary_unary_rpc_method_handler(
                    servicer.Remove,
                    request_deserializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.RemoveRequest.FromString,
                    response_serializer=github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.RemoveResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gnoi.file.File', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gnoi.file.File', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class File(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/gnoi.file.File/Get',
            github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.GetRequest.SerializeToString,
            github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TransferToRemote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gnoi.file.File/TransferToRemote',
            github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.TransferToRemoteRequest.SerializeToString,
            github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.TransferToRemoteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Put(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/gnoi.file.File/Put',
            github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.PutRequest.SerializeToString,
            github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.PutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Stat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gnoi.file.File/Stat',
            github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.StatRequest.SerializeToString,
            github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.StatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Remove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gnoi.file.File/Remove',
            github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.RemoveRequest.SerializeToString,
            github_dot_com_dot_openconfig_dot_gnoi_dot_file_dot_file__pb2.RemoveResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
